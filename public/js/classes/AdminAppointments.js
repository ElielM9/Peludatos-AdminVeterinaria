import{appointmentList}from"../selectors.js";import{loadEdition,dataBase}from"../functions.js";export class AdminAppointments{constructor(){this.appointments=[]}addAppointment(t){this.appointments=[...this.appointments,t],this.showAppointments()}editAppointment(t){this.appointments=this.appointments.map(n=>n.id===t.id?t:n),this.showAppointments()}deleteAppointment(t){const n=dataBase.transaction(["appointments"],"readwrite");n.objectStore("appointments").delete(t),n.oncomplete=()=>{console.log("Cita eliminada correctamente"),this.appointments=this.appointments.filter(n=>n.id!==t),this.showAppointments()},n.onerror=()=>{console.error("Error al eliminar la cita")}}showAppointments(){for(;appointmentList.firstChild;)appointmentList.removeChild(appointmentList.firstChild);const t=dataBase.transaction("appointments").objectStore("appointments"),n=t.count();n.onsuccess=()=>{if(0===n.result){const t=document.createElement("P");return t.textContent="No hay citas registradas",void appointmentList.appendChild(t)}},t.openCursor().onsuccess=t=>{const n=t.target.result;if(n){const{patient_name:t,owner_name:e,contact_email:i,registration_date:a,symptoms:s,id:p}=n.value,o=document.createElement("LI");o.dataset.id=p,o.classList.add("appointment-item"),o.innerHTML=`\n               <div class="appointment-item__info">\n                <p class="appointment-item__detail">\n                 Mascota:\n                 <span class="appointment-item__detail--value">\n                  ${t}\n                 </span>\n                </p>\n                <p class="appointment-item__detail">\n                 Propietario:\n                 <span class="appointment-item__detail--value">\n                  ${e}\n                 </span>\n                </p>\n                <p class="appointment-item__detail">\n                 Correo:\n                 <span class="appointment-item__detail--value">\n                  ${i}\n                 </span>\n                </p>\n                <p class="appointment-item__detail">\n                 Fecha de alta:\n                 <span class="appointment-item__detail--value">\n                  ${a}\n                 </span>\n                </p>\n               </div>\n               <p class="appointment-item__detail"> \n               SÃ­ntomas:\n                <span class="appointment-item__detail--value">\n                  ${s}\n                </span>\n               </p>\n          `;const m=document.createElement("BUTTON");m.textContent="Editar",m.classList.add("appointment-item__btn","appointment-item__btn--edit");const l=structuredClone(n.value);m.onclick=()=>loadEdition(l);const d=document.createElement("BUTTON");d.textContent="Borrar",d.classList.add("appointment-item__btn","appointment-item__btn--delete"),d.onclick=()=>this.deleteAppointment(p);const c=document.createElement("DIV");c.classList.add("appointment-item__btn-container"),c.appendChild(m),c.appendChild(d),o.appendChild(c),appointmentList.appendChild(o),n.continue()}}}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
