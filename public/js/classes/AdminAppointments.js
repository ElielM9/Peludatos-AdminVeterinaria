import{appointmentList}from"../selectors.js";import{loadEdition}from"../functions.js";export class AdminAppointments{constructor(){this.appointments=[]}addAppointment(t){this.appointments=[...this.appointments,t],this.showAppointments()}editAppointment(t){this.appointments=this.appointments.map(n=>n.id===t.id?t:n),this.showAppointments()}deleteAppointment(t){this.appointments=this.appointments.filter(n=>n.id!==t),this.showAppointments()}showAppointments(){for(;appointmentList.firstChild;)appointmentList.removeChild(appointmentList.firstChild);if(0===this.appointments.length){const t=document.createElement("P");return t.classList.add("no-appointments"),t.textContent="No hay citas agendadas",void appointmentList.appendChild(t)}this.appointments.forEach(t=>{const n=document.createElement("LI");n.classList.add("appointment-item"),n.innerHTML=`\n             <div class="appointment-item__info">\n              <p class="appointment-item__detail">\n               Mascota:\n               <span class="appointment-item__detail--value">\n                ${t.patient_name}\n               </span>\n              </p>\n              <p class="appointment-item__detail">\n               Propietario:\n               <span class="appointment-item__detail--value">\n                ${t.owner_name}\n               </span>\n              </p>\n              <p class="appointment-item__detail">\n               Correo:\n               <span class="appointment-item__detail--value">\n                ${t.contact_email}\n               </span>\n              </p>\n              <p class="appointment-item__detail">\n               Fecha de alta:\n               <span class="appointment-item__detail--value">\n                ${t.registration_date}\n               </span>\n              </p>\n             </div>\n             <p class="appointment-item__detail"> \n             SÃ­ntomas:\n              <span class="appointment-item__detail--value">\n                ${t.symptoms}\n              </span>\n             </p>\n        `;const e=document.createElement("BUTTON");e.textContent="Editar",e.classList.add("appointment-item__btn","appointment-item__btn--edit");const i=structuredClone(t);e.onclick=()=>loadEdition(i);const p=document.createElement("BUTTON");p.textContent="Borrar",p.classList.add("appointment-item__btn","appointment-item__btn--delete"),p.onclick=()=>this.deleteAppointment(t.id);const a=document.createElement("DIV");a.classList.add("appointment-item__btn-container"),a.appendChild(e),a.appendChild(p),n.appendChild(a),appointmentList.appendChild(n)})}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
