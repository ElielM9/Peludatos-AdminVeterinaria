import{appointmentObj,editing}from"./variables.js";import{Notification}from"./classes/Notification.js";import{AdminAppointments}from"./classes/AdminAppointments.js";import{formAppointment,formBtn,inputPatientName,inputOwnerName,inputContactEmail,inputRegistrationDate,inputSymptoms}from"./selectors.js";const appointments=new AdminAppointments;export function appointmentData(t){t.preventDefault(),appointmentObj[t.target.name]=t.target.value}export function sendAppointment(t){t.preventDefault(),Object.values(appointmentObj).some(t=>""===t.trim())?new Notification({message:"Todos los campos son obligatorios",type:"error"}):(editing.value?(appointments.editAppointment({...appointmentObj}),new Notification({message:"Guardado correctamente",type:"success"})):(appointments.addAppointment({...appointmentObj}),new Notification({message:"Cita agregada correctamente",type:"success"})),formAppointment.reset(),resetAppointmentObj(),formBtn.value="Registrar paciente",editing.value=!1)}export function resetAppointmentObj(){Object.assign(appointmentObj,{id:generateId(),patient_name:"",owner_name:"",contact_email:"",registration_date:"",symptoms:""})}export function generateId(){return Math.random().toString(36).substring(2)+Date.now()}export function loadEdition(t){Object.assign(appointmentObj,t),inputPatientName.value=t.patient_name,inputOwnerName.value=t.owner_name,inputContactEmail.value=t.contact_email,inputRegistrationDate.value=t.registration_date,inputSymptoms.value=t.symptoms,editing.value=!0,formBtn.value="Guardar cambios"}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZ1bmN0aW9ucy5qcyJdLCJuYW1lcyI6WyJhcHBvaW50bWVudE9iaiIsImVkaXRpbmciLCJOb3RpZmljYXRpb24iLCJBZG1pbkFwcG9pbnRtZW50cyIsImZvcm1BcHBvaW50bWVudCIsImZvcm1CdG4iLCJpbnB1dFBhdGllbnROYW1lIiwiaW5wdXRPd25lck5hbWUiLCJpbnB1dENvbnRhY3RFbWFpbCIsImlucHV0UmVnaXN0cmF0aW9uRGF0ZSIsImlucHV0U3ltcHRvbXMiLCJhcHBvaW50bWVudHMiLCJhcHBvaW50bWVudERhdGEiLCJlIiwicHJldmVudERlZmF1bHQiLCJ0YXJnZXQiLCJuYW1lIiwidmFsdWUiLCJzZW5kQXBwb2ludG1lbnQiLCJPYmplY3QiLCJ2YWx1ZXMiLCJzb21lIiwidHJpbSIsIm1lc3NhZ2UiLCJ0eXBlIiwiZWRpdEFwcG9pbnRtZW50IiwiYWRkQXBwb2ludG1lbnQiLCJyZXNldCIsInJlc2V0QXBwb2ludG1lbnRPYmoiLCJhc3NpZ24iLCJpZCIsImdlbmVyYXRlSWQiLCJwYXRpZW50X25hbWUiLCJvd25lcl9uYW1lIiwiY29udGFjdF9lbWFpbCIsInJlZ2lzdHJhdGlvbl9kYXRlIiwic3ltcHRvbXMiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHJpbmciLCJEYXRlIiwibm93IiwibG9hZEVkaXRpb24iLCJhcHBvaW50bWVudCJdLCJtYXBwaW5ncyI6Ik9BQ1NBLGVBQWdCQyxZQUFlLHdCQUMvQkMsaUJBQW9CLG1DQUNwQkMsc0JBQXlCLHdDQUVoQ0MsZ0JBQ0FDLFFBQ0FDLGlCQUNBQyxlQUNBQyxrQkFDQUMsc0JBQ0FDLGtCQUNLLGlCQUdQLE1BQU1DLGFBQWUsSUFBSVIseUJBRWxCLFNBQVNTLGdCQUFnQkMsR0FDOUJBLEVBQUVDLGlCQUdGZCxlQUFlYSxFQUFFRSxPQUFPQyxNQUFRSCxFQUFFRSxPQUFPRSxhQUdwQyxTQUFTQyxnQkFBZ0JMLEdBQzlCQSxFQUFFQyxpQkFLRUssT0FBT0MsT0FBT3BCLGdCQUFnQnFCLEtBQU1KLEdBQTJCLEtBQWpCQSxFQUFNSyxRQUN0RCxJQUFJcEIsYUFBYSxDQUNmcUIsUUFBUyxvQ0FDVEMsS0FBTSxXQU9OdkIsUUFBUWdCLE9BRVZOLGFBQWFjLGdCQUFnQixJQUFLekIsaUJBRWxDLElBQUlFLGFBQWEsQ0FDZnFCLFFBQVMseUJBQ1RDLEtBQU0sY0FJUmIsYUFBYWUsZUFBZSxJQUFLMUIsaUJBR2pDLElBQUlFLGFBQWEsQ0FDZnFCLFFBQVMsOEJBQ1RDLEtBQU0sYUFLVnBCLGdCQUFnQnVCLFFBQ2hCQyxzQkFDQXZCLFFBQVFZLE1BQVEscUJBQ2hCaEIsUUFBUWdCLE9BQVEsVUFHWCxTQUFTVyxzQkFFZFQsT0FBT1UsT0FBTzdCLGVBQWdCLENBQzVCOEIsR0FBSUMsYUFDSkMsYUFBYyxHQUNkQyxXQUFZLEdBQ1pDLGNBQWUsR0FDZkMsa0JBQW1CLEdBQ25CQyxTQUFVLFlBSVAsU0FBU0wsYUFFZCxPQUFPTSxLQUFLQyxTQUFTQyxTQUFTLElBQUlDLFVBQVUsR0FBS0MsS0FBS0MsYUFHakQsU0FBU0MsWUFBWUMsR0FFMUJ6QixPQUFPVSxPQUFPN0IsZUFBZ0I0QyxHQUc5QnRDLGlCQUFpQlcsTUFBUTJCLEVBQVlaLGFBQ3JDekIsZUFBZVUsTUFBUTJCLEVBQVlYLFdBQ25DekIsa0JBQWtCUyxNQUFRMkIsRUFBWVYsY0FDdEN6QixzQkFBc0JRLE1BQVEyQixFQUFZVCxrQkFDMUN6QixjQUFjTyxNQUFRMkIsRUFBWVIsU0FFbENuQyxRQUFRZ0IsT0FBUSxFQUVoQlosUUFBUVksTUFBUSIsImZpbGUiOiJmdW5jdGlvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBJbXBvcnRhY2lvbmVzICovXG5pbXBvcnQgeyBhcHBvaW50bWVudE9iaiwgZWRpdGluZyB9IGZyb20gXCIuL3ZhcmlhYmxlcy5qc1wiO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uIH0gZnJvbSBcIi4vY2xhc3Nlcy9Ob3RpZmljYXRpb24uanNcIjtcbmltcG9ydCB7IEFkbWluQXBwb2ludG1lbnRzIH0gZnJvbSBcIi4vY2xhc3Nlcy9BZG1pbkFwcG9pbnRtZW50cy5qc1wiO1xuaW1wb3J0IHtcbiAgZm9ybUFwcG9pbnRtZW50LFxuICBmb3JtQnRuLFxuICBpbnB1dFBhdGllbnROYW1lLFxuICBpbnB1dE93bmVyTmFtZSxcbiAgaW5wdXRDb250YWN0RW1haWwsXG4gIGlucHV0UmVnaXN0cmF0aW9uRGF0ZSxcbiAgaW5wdXRTeW1wdG9tcyxcbn0gZnJvbSBcIi4vc2VsZWN0b3JzLmpzXCI7XG5cbi8vIEluc3RhbmNpYXIgbGEgY2xhc2UgQWRtaW5BcHBvaW50bWVudHNcbmNvbnN0IGFwcG9pbnRtZW50cyA9IG5ldyBBZG1pbkFwcG9pbnRtZW50cygpO1xuXG5leHBvcnQgZnVuY3Rpb24gYXBwb2ludG1lbnREYXRhKGUpIHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gIC8vIEVzY3JpYmlyIGxvcyBkYXRvcyBpbmdyZXNhZG9zIGVuIGVsIG9iamV0byBhcHBvaW50bWVudE9ialxuICBhcHBvaW50bWVudE9ialtlLnRhcmdldC5uYW1lXSA9IGUudGFyZ2V0LnZhbHVlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VuZEFwcG9pbnRtZW50KGUpIHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gIC8vIFZhbGlkYXIgbG9zIGRhdG9zIGluZ3Jlc2Fkb3NcblxuICAvLyBTaSBoYXkgYWxnw7puIGNhbXBvIHZhY8OtbywgbW9zdHJhciB1biBtZW5zYWplIGRlIGVycm9yIHkgZGV0ZW5lciBlbCBlbnbDrW8gZGVsIGZvcm11bGFyaW9cbiAgaWYgKE9iamVjdC52YWx1ZXMoYXBwb2ludG1lbnRPYmopLnNvbWUoKHZhbHVlKSA9PiB2YWx1ZS50cmltKCkgPT09IGBgKSkge1xuICAgIG5ldyBOb3RpZmljYXRpb24oe1xuICAgICAgbWVzc2FnZTogYFRvZG9zIGxvcyBjYW1wb3Mgc29uIG9ibGlnYXRvcmlvc2AsXG4gICAgICB0eXBlOiBgZXJyb3JgLFxuICAgIH0pO1xuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRWRpdGFyIG8gYWdyZWdhciBsYSBjaXRhIHNlZ8O6biBzZWEgbGEgYWNjacOzblxuICBpZiAoZWRpdGluZy52YWx1ZSkge1xuICAgIC8vIEVkaXRhciBsYSBjaXRhIGVuIGVsIGFycmF5IGRlIGNpdGFzIHkgbW9zdHJhciB1biBtZW5zYWplIGRlIMOpeGl0b1xuICAgIGFwcG9pbnRtZW50cy5lZGl0QXBwb2ludG1lbnQoeyAuLi5hcHBvaW50bWVudE9iaiB9KTtcblxuICAgIG5ldyBOb3RpZmljYXRpb24oe1xuICAgICAgbWVzc2FnZTogYEd1YXJkYWRvIGNvcnJlY3RhbWVudGVgLFxuICAgICAgdHlwZTogYHN1Y2Nlc3NgLFxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIC8vIEVudmlhciBsb3MgZGF0b3MgYWwgYWRtaW5pc3RyYWRvclxuICAgIGFwcG9pbnRtZW50cy5hZGRBcHBvaW50bWVudCh7IC4uLmFwcG9pbnRtZW50T2JqIH0pO1xuXG4gICAgLy8gTW9zdHJhciB1biBtZW5zYWplIGRlIMOpeGl0b1xuICAgIG5ldyBOb3RpZmljYXRpb24oe1xuICAgICAgbWVzc2FnZTogYENpdGEgYWdyZWdhZGEgY29ycmVjdGFtZW50ZWAsXG4gICAgICB0eXBlOiBgc3VjY2Vzc2AsXG4gICAgfSk7XG4gIH1cblxuICAvLyBSZXNldGVhciBlbCBmb3JtdWxhcmlvIHkgZWwgb2JqZXRvXG4gIGZvcm1BcHBvaW50bWVudC5yZXNldCgpO1xuICByZXNldEFwcG9pbnRtZW50T2JqKCk7XG4gIGZvcm1CdG4udmFsdWUgPSBgUmVnaXN0cmFyIHBhY2llbnRlYDtcbiAgZWRpdGluZy52YWx1ZSA9IGZhbHNlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVzZXRBcHBvaW50bWVudE9iaigpIHtcbiAgLy8gUmVzZXRlYXIgZWwgb2JqZXRvIGFwcG9pbnRtZW50T2JqIHBhcmEgcXVlIG5vIGNvbnRlbmdhIGRhdG9zIGRlIHVuYSBjaXRhIGFudGVyaW9yXG4gIE9iamVjdC5hc3NpZ24oYXBwb2ludG1lbnRPYmosIHtcbiAgICBpZDogZ2VuZXJhdGVJZCgpLFxuICAgIHBhdGllbnRfbmFtZTogYGAsXG4gICAgb3duZXJfbmFtZTogYGAsXG4gICAgY29udGFjdF9lbWFpbDogYGAsXG4gICAgcmVnaXN0cmF0aW9uX2RhdGU6IGBgLFxuICAgIHN5bXB0b21zOiBgYCxcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUlkKCkge1xuICAvLyBHZW5lcmFyIHVuIElEIMO6bmljbyBwYXJhIGNhZGEgY2l0YS5cbiAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZygyKSArIERhdGUubm93KCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkRWRpdGlvbihhcHBvaW50bWVudCkge1xuICAvLyBDYXJnYXIgbG9zIGRhdG9zIGRlIGxhIGNpdGEgZW4gZWwgb2JqZXRvIGFwcG9pbnRtZW50T2JqIHBhcmEgcXVlIHB1ZWRhIHNlciBlZGl0YWRvXG4gIE9iamVjdC5hc3NpZ24oYXBwb2ludG1lbnRPYmosIGFwcG9pbnRtZW50KTtcblxuICAvLyBDYXJnYXIgbG9zIGRhdG9zIGRlIGxhIGNpdGEgZW4gbG9zIGlucHV0c1xuICBpbnB1dFBhdGllbnROYW1lLnZhbHVlID0gYXBwb2ludG1lbnQucGF0aWVudF9uYW1lO1xuICBpbnB1dE93bmVyTmFtZS52YWx1ZSA9IGFwcG9pbnRtZW50Lm93bmVyX25hbWU7XG4gIGlucHV0Q29udGFjdEVtYWlsLnZhbHVlID0gYXBwb2ludG1lbnQuY29udGFjdF9lbWFpbDtcbiAgaW5wdXRSZWdpc3RyYXRpb25EYXRlLnZhbHVlID0gYXBwb2ludG1lbnQucmVnaXN0cmF0aW9uX2RhdGU7XG4gIGlucHV0U3ltcHRvbXMudmFsdWUgPSBhcHBvaW50bWVudC5zeW1wdG9tcztcblxuICBlZGl0aW5nLnZhbHVlID0gdHJ1ZTtcblxuICBmb3JtQnRuLnZhbHVlID0gYEd1YXJkYXIgY2FtYmlvc2A7XG59XG4iXX0=
